{\rtf1\ansi\ansicpg1252\cocoartf2757
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 import tensorflow as tf\
import cv2\
import numpy as np\
from picamera import PiCamera\
from time import sleep\
\
# Load the trained model\
model = tf.keras.models.load_model('basil_lemon_model.h5')\
\
# Initialize the camera\
camera = PiCamera()\
\
# Function to capture an image\
def capture_image():\
    camera.start_preview()\
    sleep(2)  # Give the camera time to adjust to the lighting\
    camera.capture('/home/pi/plant_image.jpg')\
    camera.stop_preview()\
\
# Preprocess the image for prediction\
def preprocess_image(image_path):\
    img = cv2.imread(image_path)\
    img = cv2.resize(img, (224, 224))  # Resize to model input size\
    img = np.expand_dims(img, axis=0)  # Add batch dimension\
    img = img / 255.0  # Normalize image\
    return img\
\
# Function to predict the plant\
def recognize_plant(image_path):\
    img = preprocess_image(image_path)\
    prediction = model.predict(img)\
    if prediction > 0.5:\
        print("This is a Lemon plant!")\
    else:\
        print("This is a Basil plant!")\
\
# Capture an image\
capture_image()\
\
# Predict the plant type\
recognize_plant('/home/pi/plant_image.jpg')\
}